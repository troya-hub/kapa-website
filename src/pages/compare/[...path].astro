---
import type { Page, PageComponent, PagesApiResponse } from "@/pages.types.ts";
import BaseLayout from "@/layouts/BaseLayout.astro";

import ComponentRenderer from "@/pages/compare/components/ComponentRenderer.astro";

export async function getStaticPaths() {
	const response = await fetch("https://app.kapa99.com/api/astro/pages");
	const { pages } = (await response.json()) as PagesApiResponse;

	return pages.map((page: Page) => {
		return {
			params: { path: page.slug },
			props: { page },
		};
	});
}

const { page } = Astro.props as { page: Page };

const sortedComponents = page.components.sort((a, b) => a.order - b.order);
---

<BaseLayout>
	<div>
		{
			sortedComponents.map((component: PageComponent) => (
				<ComponentRenderer component={component} />
			))
		}
	</div>
</BaseLayout>

<!--<script define:vars={{ sortedComponents }}>-->
<!--	console.log(-->
<!--		sortedComponents-->
<!--			.filter((p) => p.pageable_type === "App\\Models\\StaticPage")-->
<!--			.map((p) => p.pageable.title)-->
<!--			.flat()-->
<!--	);-->
<!--</script>-->
